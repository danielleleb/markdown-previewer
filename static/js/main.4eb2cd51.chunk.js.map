{"version":3,"sources":["actions/index.js","components/placeholder.js","components/text_editor.js","components/text_display.js","components/App.js","reducers/reducer_text.js","reducers/index.js","index.js"],"names":["updateText","text","type","payload","Placeholder","TextEditor","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","_this2","react_default","a","createElement","onChange","event","handleChange","target","value","className","id","setState","Component","connect","_ref","dispatch","bindActionCreators","TextDisplay","dangerouslySetInnerHTML","__html","marked","breaks","App","text_editor","text_display","initialState","rootReducer","combineReducers","arguments","length","undefined","action","concat","toConsumableArray","createStoreWithMiddleware","applyMiddleware","createStore","ReactDOM","render","es","store","reducers","components_App","document","getElementById"],"mappings":"kRAAO,SAASA,EAAWC,GACvB,MAAO,CACHC,KAAM,eACNC,QAASF,GCHjB,IA+CeG,EA/CE,+qCCOXC,cACF,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACfE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KACDQ,MAAQ,CACTb,KAAMG,GAHKG,wEAOV,IAAAQ,EAAAL,KACL,OACIM,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,YACIC,SAAU,SAACC,GAAD,OAAWL,EAAKM,aAAaD,EAAME,OAAOC,QACpDA,MAAOb,KAAKI,MAAMb,KAClBC,KAAK,OACLsB,UAAU,QACVC,GAAG,iDAKNxB,GACTS,KAAKgB,SAAS,CACVzB,SAEJS,KAAKJ,MAAMN,WAAWC,UAzBL0B,aAyCVC,kBAZf,SAAAC,GACI,MAAO,CACH5B,KAFyB4B,EAAP5B,OAM1B,SAA4B6B,GACxB,OAAOC,YAAmB,CAAC/B,cAAa8B,IAK7BF,CAA6CvB,oBC3CtD2B,mLAEE,OACIhB,EAAAC,EAAAC,cAAA,OAAKM,UAAU,eAAeC,GAAG,UAAUQ,wBAAyB,CAACC,OAAQC,IAAOzB,KAAKJ,MAAML,KAAK,GAAI,CAACmC,QAAQ,cAHnGT,aAeXC,kBANf,SAAAC,GACI,MAAO,CACH5B,KAFyB4B,EAAP5B,OAMc,KAAzB2B,CAA+BI,GCH/BK,mLATX,OACErB,EAAAC,EAAAC,cAAA,OAAKM,UAAU,OACbR,EAAAC,EAAAC,cAACoB,EAAD,MACAtB,EAAAC,EAAAC,cAACqB,EAAD,cANUZ,qBCJZa,EAAepC,ECMNqC,EAJKC,YAAgB,CAChCzC,KDDW,WAA0C,IAAhCa,EAAgC6B,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAxB,CAACH,GAAeM,EAAQH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACrD,OAAOC,EAAO5C,MACV,IAAK,eACD,OAAQ4C,EAAO3C,SAAf4C,OAAAvC,OAAAwC,EAAA,EAAAxC,CAA2BM,IAC/B,QACI,OAAOA,MECbmC,EAA4BC,cAAkBC,KAEpDC,IAASC,OACLrC,EAAAC,EAAAC,cAACoC,EAAA,EAAD,CAAUC,MAAON,EAA0BO,IACvCxC,EAAAC,EAAAC,cAACuC,EAAD,OAEJC,SAASC,eAAe","file":"static/js/main.4eb2cd51.chunk.js","sourcesContent":["export function updateText(text) {\n    return {\n        type: 'TEXT_UPDATED',\n        payload: text\n    }\n}","const Placeholder = `\n# Welcome to my React Markdown Previewer!\n\n## This is a sub-heading...\n### And here's some other cool stuff:\n  \nHeres some code, \\`<div></div>\\`, between 2 backticks.\n\n\\`\\`\\`\n// this is multi-line code:\n\nfunction anotherExample(firstLine, lastLine) {\n  if (firstLine == '\\`\\`\\`' && lastLine == '\\`\\`\\`') {\n    return multiLineCode;\n  }\n}\n\\`\\`\\`\n  \nYou can also make text **bold**... whoa!\nOr _italic_.\nOr... wait for it... **_both!_**\nAnd feel free to go crazy ~~crossing stuff out~~.\n\nThere's also [links](https://www.freecodecamp.com), and\n> Block Quotes!\n\nAnd if you want to get really crazy, even tables:\n\nWild Header | Crazy Header | Another Header?\n------------ | ------------- | ------------- \nYour content can | be here, and it | can be here....\nAnd here. | Okay. | I think we get it.\n\n- And of course there are lists.\n  - Some are bulleted.\n     - With different indentation levels.\n        - That look like this.\n\n\n1. And there are numbererd lists too.\n1. Use just 1s if you want! \n1. But the list goes on...\n- Even if you use dashes or asterisks.\n* And last but not least, let's not forget embedded images:\n\n![React Logo w/ Text](https://goo.gl/Umyytc) `\n\nexport default Placeholder;","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport {updateText} from '../actions/index';\nimport Placeholder from './placeholder';\n\n\nclass TextEditor extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            text: Placeholder\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <textarea\n                    onChange={(event) => this.handleChange(event.target.value)}\n                    value={this.state.text}\n                    type=\"text\"\n                    className=\"input\"\n                    id='editor'/>\n            </div>\n        )\n    }\n\n    handleChange(text) {\n        this.setState({\n            text\n        });\n        this.props.updateText(text);\n    }\n}\n\nfunction mapPropsToState({text}) {\n    return {\n        text\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return bindActionCreators({updateText}, dispatch);\n}\n\n\n\nexport default connect(mapPropsToState, mapDispatchToProps)(TextEditor);","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport marked from 'marked';\n\n\nclass TextDisplay extends Component {\n    render() {\n        return (\n            <div className=\"text-display\" id=\"preview\" dangerouslySetInnerHTML={{__html: marked(this.props.text[0], {breaks: true})}}>\n            </div>\n        )\n    }\n}\n\nfunction mapPropsToState({text}) {\n    return {\n        text\n    }\n}\n\nexport default connect(mapPropsToState, null)(TextDisplay);","import React, { Component } from 'react';\nimport '../App.css';\nimport TextEditor from './text_editor';\nimport TextDisplay from './text_display';\n\nclass App extends Component {\n\n  render() {\n    return (\n      <div className=\"App\">\n        <TextEditor/>\n        <TextDisplay/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import Placeholder from '../components/placeholder'\nconst initialState = Placeholder;\n\nexport default function (state = [initialState], action) {\n    switch(action.type) {\n        case 'TEXT_UPDATED':\n            return [action.payload, ...state];\n        default:\n            return state\n    }\n}","import {combineReducers} from 'redux';\nimport TextReducer from './reducer_text';\n\nconst rootReducer = combineReducers({\n    text: TextReducer\n});\n\nexport default rootReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport {createStore, applyMiddleware} from 'redux';\nimport './index.css';\nimport App from './components/App';\n\nimport reducers from './reducers';\n\nconst createStoreWithMiddleware = applyMiddleware()(createStore);\n\nReactDOM.render(\n    <Provider store={createStoreWithMiddleware(reducers)}>\n        <App />\n    </Provider>,\n    document.getElementById('root'));\n"],"sourceRoot":""}