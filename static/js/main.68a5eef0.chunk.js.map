{"version":3,"sources":["redux/actions/index.js","components/text_editor.js","components/text_display.js","components/App.js","redux/placeholder.js","redux/reducers/index.js","redux/reducers/reducer_text.js","redux/store.js","index.js"],"names":["updateText","text","type","payload","TextEditor","handleChange","event","target","value","_this","props","this","react_default","a","createElement","onChange","className","id","Component","connect","_ref","dispatch","bindActionCreators","TextDisplay","dangerouslySetInnerHTML","__html","marked","breaks","App","text_editor","text_display","placeholder","rootReducer","combineReducers","state","arguments","length","undefined","Placeholder","action","concat","Object","toConsumableArray","store","applyMiddleware","createStore","createStoreWithMiddleware","reducers","initialState","ReactDOM","render","es","components_App","document","getElementById"],"mappings":"kRAAO,SAASA,EAAWC,GACvB,MAAO,CACHC,KAAM,eACNC,QAASF,OCEXG,6MAEFC,aAAe,SAACC,GACZ,IAAML,EAAOK,EAAMC,OAAOC,MAC1BC,EAAKC,MAAMV,WAAWC,4EAGjB,IACGA,EAASU,KAAKD,MAAdT,KAER,OACIW,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,YACIC,SAAUJ,KAAKN,aACfG,MAAOP,EACPC,KAAK,OACLc,UAAU,QACVC,GAAG,mBAjBEC,aAmCVC,kBAZf,SAAAC,GACI,MAAO,CACHnB,KAF2BmB,EAARnB,KAER,KAInB,SAA4BoB,GACxB,OAAOC,YAAmB,CAACtB,cAAaqB,IAK7BF,CAA6Cf,oBCnCtDmB,mLAEE,OACIX,EAAAC,EAAAC,cAAA,OAAKE,UAAU,eAAeC,GAAG,UAAUO,wBAAyB,CAACC,OAAQC,IAAOf,KAAKD,MAAMT,KAAK,GAAI,CAAC0B,QAAQ,cAHnGT,aAeXC,kBANf,SAAAC,GACI,MAAO,CACHnB,KAFyBmB,EAAPnB,OAMc,KAAzBkB,CAA+BI,GCA/BK,mLAZX,OACEhB,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OACXJ,EAAAC,EAAAC,cAAA,MAAIE,UAAU,SAAd,sBACAJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,WACbJ,EAAAC,EAAAC,cAACe,EAAD,MACAjB,EAAAC,EAAAC,cAACgB,EAAD,eARMZ,qBC0CHa,EA/CE,+qCCOFC,EAJKC,YAAgB,CAChChC,KCDW,WAA0C,IAAhCiC,EAAgCC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAxB,CAFZG,grCAE4BC,EAAQJ,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACrD,OAAOE,EAAOrC,MACV,IAAK,eACD,OAAQqC,EAAOpC,SAAfqC,OAAAC,OAAAC,EAAA,EAAAD,CAA2BP,IAC/B,QACI,OAAOA,MCCJS,EAHmBC,cAAkBC,IACtCC,CAA0BC,EAAU,CAACC,ICEnDC,IAASC,OACLtC,EAAAC,EAAAC,cAACqC,EAAA,EAAD,CAAUR,MAAOA,GACb/B,EAAAC,EAAAC,cAACsC,EAAD,OAEJC,SAASC,eAAe","file":"static/js/main.68a5eef0.chunk.js","sourcesContent":["export function updateText(text) {\n    return {\n        type: 'TEXT_UPDATED',\n        payload: text\n    }\n}","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport {updateText} from '../redux/actions/index';\n\nclass TextEditor extends Component {\n\n    handleChange = (event) => {\n        const text = event.target.value;\n        this.props.updateText(text);\n    }\n\n    render() {\n        const { text } = this.props;\n\n        return (\n            <div>\n                <textarea\n                    onChange={this.handleChange}\n                    value={text}\n                    type=\"text\"\n                    className=\"input\"\n                    id='editor'/>\n            </div>\n        )\n    }\n}\n\nfunction mapPropsToState({ text }) {\n    return {\n        text: text[0]\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return bindActionCreators({updateText}, dispatch);\n}\n\n\n\nexport default connect(mapPropsToState, mapDispatchToProps)(TextEditor);","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport marked from 'marked';\n\n\nclass TextDisplay extends Component {\n    render() {\n        return (\n            <div className=\"text-display\" id=\"preview\" dangerouslySetInnerHTML={{__html: marked(this.props.text[0], {breaks: true})}}>\n            </div>\n        )\n    }\n}\n\nfunction mapPropsToState({text}) {\n    return {\n        text\n    }\n}\n\nexport default connect(mapPropsToState, null)(TextDisplay);","import React, { Component } from 'react';\nimport '../App.css';\nimport TextEditor from './text_editor';\nimport TextDisplay from './text_display';\n\nclass App extends Component {\n\n  render() {\n    return (\n      <div className=\"App\">\n          <h1 className='title'>Markdown Previewer</h1>\n          <div className=\"content\">\n            <TextEditor/>\n            <TextDisplay/>\n          </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const placeholder =   `\n# Welcome to my React Markdown Previewer!\n\n## This is a sub-heading...\n### And here's some other cool stuff:\n  \nHeres some code, \\`<div></div>\\`, between 2 backticks.\n\n\\`\\`\\`\n// this is multi-line code:\n\nfunction anotherExample(firstLine, lastLine) {\n  if (firstLine == '\\`\\`\\`' && lastLine == '\\`\\`\\`') {\n    return multiLineCode;\n  }\n}\n\\`\\`\\`\n  \nYou can also make text **bold**... whoa!\nOr _italic_.\nOr... wait for it... **_both!_**\nAnd feel free to go crazy ~~crossing stuff out~~.\n\nThere's also [links](https://www.freecodecamp.com), and\n> Block Quotes!\n\nAnd if you want to get really crazy, even tables:\n\nWild Header | Crazy Header | Another Header?\n------------ | ------------- | ------------- \nYour content can | be here, and it | can be here....\nAnd here. | Okay. | I think we get it.\n\n- And of course there are lists.\n  - Some are bulleted.\n     - With different indentation levels.\n        - That look like this.\n\n\n1. And there are numbererd lists too.\n1. Use just 1s if you want! \n1. But the list goes on...\n- Even if you use dashes or asterisks.\n* And last but not least, let's not forget embedded images:\n\n![React Logo w/ Text](https://goo.gl/Umyytc) `\n\nexport default placeholder;","import {combineReducers} from 'redux';\nimport TextReducer from './reducer_text';\n\nconst rootReducer = combineReducers({\n    text: TextReducer\n});\n\nexport default rootReducer;","import Placeholder from '../placeholder'\nconst initialState = Placeholder;\n\nexport default function (state = [initialState], action) {\n    switch(action.type) {\n        case 'TEXT_UPDATED':\n            return [action.payload, ...state];\n        default:\n            return state\n    }\n}","import {createStore, applyMiddleware} from 'redux';\n\nimport reducers from './reducers';\n\nimport initialState from './placeholder';\n\nconst createStoreWithMiddleware = applyMiddleware()(createStore);\nconst store = createStoreWithMiddleware(reducers, [initialState]);\n\nexport default store;\n","import './index.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport App from './components/App';\n\nimport store from './redux/store'\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root'));\n"],"sourceRoot":""}